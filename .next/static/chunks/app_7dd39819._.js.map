{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Downloads/gltf2code/app/lib/glb-converter.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport type { MeshData, MaterialData, ProjectStructure } from '@/app/lib/glb-converter';\n\n/**\n * Generates a complete project structure from a GLTF model\n * Similar to what gltfjsx does with the -t flag\n */\nexport function generateProjectStructure(\n  gltf: GLTF, \n  componentName: string,\n  displayMode: string = 'original'\n): ProjectStructure {\n  const meshes: MeshData[] = [];\n  const materials: MaterialData[] = [];\n  let totalVertices = 0;\n  let totalTriangles = 0;\n  \n  // Process the scene to extract meshes and materials\n  gltf.scene.traverse((object) => {\n    if (object.isMesh) {\n      const mesh = object as THREE.Mesh;\n      const geometry = mesh.geometry;\n      \n      // Count vertices and triangles\n      totalVertices += geometry.attributes.position.count;\n      if (geometry.index) {\n        totalTriangles += geometry.index.count / 3;\n      } else {\n        totalTriangles += geometry.attributes.position.count / 3;\n      }\n      \n      // Generate mesh name\n      const meshName = mesh.name || `Mesh_${meshes.length}`;\n      const safeMeshName = sanitizeName(meshName);\n      \n      // Generate mesh component\n      const meshComponent = generateMeshComponent(safeMeshName, geometry, displayMode);\n      meshes.push({\n        name: safeMeshName,\n        content: meshComponent,\n        originalName: meshName\n      });\n      \n      // Process materials\n      const material = Array.isArray(mesh.material) ? mesh.material[0] : mesh.material;\n      const materialName = material.name || `Material_${materials.length}`;\n      const safeMaterialName = sanitizeName(materialName);\n      \n      // Only add unique materials\n      if (!materials.some(m => m.name === safeMaterialName)) {\n        const materialComponent = generateMaterialComponent(safeMaterialName, material, displayMode);\n        materials.push({\n          name: safeMaterialName,\n          content: materialComponent,\n          originalName: materialName\n        });\n      }\n    }\n  });\n  \n  // Generate the main index component\n  const indexContent = generateIndexComponent(componentName, meshes, materials, displayMode);\n  \n  return {\n    componentName,\n    indexContent,\n    meshes,\n    materials,\n    totalVertices,\n    totalTriangles\n  };\n}\n\n/**\n * Generates a mesh component with embedded geometry\n */\nfunction generateMeshComponent(meshName: string, geometry: THREE.BufferGeometry, displayMode: string): string {\n  // Extract geometry data\n  const positions = Array.from(geometry.attributes.position.array);\n  const normals = geometry.attributes.normal ? Array.from(geometry.attributes.normal.array) : null;\n  const uvs = geometry.attributes.uv ? Array.from(geometry.attributes.uv.array) : null;\n  const indices = geometry.index ? Array.from(geometry.index.array) : null;\n  \n  // Generate the component code\n  return `import React, { useMemo } from 'react';\nimport * as THREE from 'three';\n\nexport default function ${meshName}(props) {\n  const geometry = useMemo(() => {\n    const geom = new THREE.BufferGeometry();\n    \n    // Position data\n    const positions = new Float32Array(${JSON.stringify(positions)});\n    geom.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    \n    ${normals ? `// Normal data\n    const normals = new Float32Array(${JSON.stringify(normals)});\n    geom.setAttribute('normal', new THREE.BufferAttribute(normals, 3));` : ''}\n    \n    ${uvs ? `// UV data\n    const uvs = new Float32Array(${JSON.stringify(uvs)});\n    geom.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));` : ''}\n    \n    ${indices ? `// Index data\n    const indices = new Uint16Array(${JSON.stringify(indices)});\n    geom.setIndex(new THREE.BufferAttribute(indices, 1));` : ''}\n    \n    return geom;\n  }, []);\n  \n  return <mesh geometry={geometry} {...props} />;\n}`;\n}\n\n/**\n * Generates a material component based on display mode\n */\nfunction generateMaterialComponent(materialName: string, material: THREE.Material, displayMode: string): string {\n  // Base material properties\n  let materialType = 'MeshStandardMaterial';\n  let properties: string[] = [];\n  \n  // Determine material type\n  if (material instanceof THREE.MeshBasicMaterial) materialType = 'MeshBasicMaterial';\n  else if (material instanceof THREE.MeshPhongMaterial) materialType = 'MeshPhongMaterial';\n  else if (material instanceof THREE.MeshLambertMaterial) materialType = 'MeshLambertMaterial';\n  else if (material instanceof THREE.MeshNormalMaterial) materialType = 'MeshNormalMaterial';\n  else if (material instanceof THREE.MeshDepthMaterial) materialType = 'MeshDepthMaterial';\n  else if (material instanceof THREE.MeshMatcapMaterial) materialType = 'MeshMatcapMaterial';\n  else if (material instanceof THREE.MeshToonMaterial) materialType = 'MeshToonMaterial';\n  else if (material instanceof THREE.MeshPhysicalMaterial) materialType = 'MeshPhysicalMaterial';\n  else if (material instanceof THREE.MeshStandardMaterial) materialType = 'MeshStandardMaterial';\n  else if (material instanceof THREE.ShaderMaterial) materialType = 'ShaderMaterial';\n  \n  // Extract properties based on display mode\n  switch (displayMode) {\n    case 'wireframe':\n      properties.push('wireframe: true');\n      properties.push('transparent: true');\n      properties.push('opacity: 0.8');\n      break;\n      \n    case 'solid':\n      properties.push('color: 0x888888');\n      properties.push('metalness: 0.1');\n      properties.push('roughness: 0.8');\n      break;\n      \n    case 'normals':\n      materialType = 'MeshNormalMaterial';\n      break;\n      \n    case 'depth':\n      materialType = 'MeshDepthMaterial';\n      break;\n      \n    case 'points':\n      materialType = 'PointsMaterial';\n      properties.push('color: 0x00ff00');\n      properties.push('size: 0.01');\n      properties.push('sizeAttenuation: true');\n      break;\n      \n    default:\n      // Original material properties\n      properties.push(`color: new THREE.Color(${material.color.r}, ${material.color.g}, ${material.color.b})`);\n      \n      if ('roughness' in material) properties.push(`roughness: ${(material as any).roughness}`);\n      if ('metalness' in material) properties.push(`metalness: ${(material as any).metalness}`);\n      if ('opacity' in material) properties.push(`opacity: ${(material as any).opacity}`);\n      if ('transparent' in material) properties.push(`transparent: ${(material as any).transparent}`);\n      if ('emissive' in material) {\n        const emissive = (material as any).emissive;\n        properties.push(`emissive: new THREE.Color(${emissive.r}, ${emissive.g}, ${emissive.b})`);\n      }\n      if ('emissiveIntensity' in material) properties.push(`emissiveIntensity: ${(material as any).emissiveIntensity}`);\n      if ('shininess' in material) properties.push(`shininess: ${(material as any).shininess}`);\n      break;\n  }\n  \n  // Generate the component code\n  return `import * as THREE from 'three';\n\nexport default function ${materialName}() {\n  return new THREE.${materialType}({\n    ${properties.join(',\\n    ')}\n  });\n}`;\n}\n\n/**\n * Generates the main index component that assembles all parts\n */\nfunction generateIndexComponent(\n  componentName: string,\n  meshes: MeshData[],\n  materials: MaterialData[],\n  displayMode: string\n): string {\n  // Generate imports\n  const meshImports = meshes.map(mesh => \n    `import ${mesh.name} from './meshes/${mesh.name}';`\n  ).join('\\n');\n  \n  const materialImports = materials.map(material => \n    `import ${material.name} from './materials/${material.name}';`\n  ).join('\\n');\n  \n  // Generate JSX structure\n  const meshElements = meshes.map((mesh, i) => {\n    const material = materials[i % materials.length];\n    return `      <${mesh.name} material={${material.name}()} />`;\n  }).join('\\n');\n  \n  return `import React, { useRef, useMemo } from 'react';\nimport type { GroupProps } from '@react-three/fiber';\n\n${meshImports}\n${materialImports}\n\nexport default function ${componentName}(props: GroupProps) {\n  const ref = useRef();\n  \n  return (\n    <group ref={ref} {...props}>\n${meshElements}\n    </group>\n  );\n}`;\n}\n\n/**\n * Sanitizes names to be valid JavaScript identifiers\n */\nfunction sanitizeName(name: string): string {\n  // Replace invalid characters with underscores\n  let safeName = name.replace(/[^a-zA-Z0-9_]/g, '_');\n  \n  // Ensure it starts with a letter\n  if (!/^[a-zA-Z_]/.test(safeName)) {\n    safeName = '_' + safeName;\n  }\n  \n  // Handle reserved keywords\n  const reservedKeywords = ['default', 'function', 'class', 'export', 'import', 'let', 'const', 'var'];\n  if (reservedKeywords.includes(safeName.toLowerCase())) {\n    safeName = '_' + safeName;\n  }\n  \n  return safeName;\n}"],"names":[],"mappings":";;;AAAA;;AAQO,SAAS,yBACd,IAAU,EACV,aAAqB;QACrB,cAAA,iEAAsB;IAEtB,MAAM,SAAqB,EAAE;IAC7B,MAAM,YAA4B,EAAE;IACpC,IAAI,gBAAgB;IACpB,IAAI,iBAAiB;IAErB,oDAAoD;IACpD,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnB,IAAI,OAAO,MAAM,EAAE;YACjB,MAAM,OAAO;YACb,MAAM,WAAW,KAAK,QAAQ;YAE9B,+BAA+B;YAC/B,iBAAiB,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;YACnD,IAAI,SAAS,KAAK,EAAE;gBAClB,kBAAkB,SAAS,KAAK,CAAC,KAAK,GAAG;YAC3C,OAAO;gBACL,kBAAkB,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK,GAAG;YACzD;YAEA,qBAAqB;YACrB,MAAM,WAAW,KAAK,IAAI,IAAI,AAAC,QAAqB,OAAd,OAAO,MAAM;YACnD,MAAM,eAAe,aAAa;YAElC,0BAA0B;YAC1B,MAAM,gBAAgB,sBAAsB,cAAc,UAAU;YACpE,OAAO,IAAI,CAAC;gBACV,MAAM;gBACN,SAAS;gBACT,cAAc;YAChB;YAEA,oBAAoB;YACpB,MAAM,WAAW,MAAM,OAAO,CAAC,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,EAAE,GAAG,KAAK,QAAQ;YAChF,MAAM,eAAe,SAAS,IAAI,IAAI,AAAC,YAA4B,OAAjB,UAAU,MAAM;YAClE,MAAM,mBAAmB,aAAa;YAEtC,4BAA4B;YAC5B,IAAI,CAAC,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,mBAAmB;gBACrD,MAAM,oBAAoB,0BAA0B,kBAAkB,UAAU;gBAChF,UAAU,IAAI,CAAC;oBACb,MAAM;oBACN,SAAS;oBACT,cAAc;gBAChB;YACF;QACF;IACF;IAEA,oCAAoC;IACpC,MAAM,eAAe,uBAAuB,eAAe,QAAQ,WAAW;IAE9E,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;IACF;AACF;AAEA;;CAEC,GACD,SAAS,sBAAsB,QAAgB,EAAE,QAA8B,EAAE,WAAmB;IAClG,wBAAwB;IACxB,MAAM,YAAY,MAAM,IAAI,CAAC,SAAS,UAAU,CAAC,QAAQ,CAAC,KAAK;IAC/D,MAAM,UAAU,SAAS,UAAU,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI;IAC5F,MAAM,MAAM,SAAS,UAAU,CAAC,EAAE,GAAG,MAAM,IAAI,CAAC,SAAS,UAAU,CAAC,EAAE,CAAC,KAAK,IAAI;IAChF,MAAM,UAAU,SAAS,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,KAAK,CAAC,KAAK,IAAI;IAEpE,8BAA8B;IAC9B,OAAO,AAAC,uGAQ+B,OALf,UAAS,oKAQ7B,OAHmC,KAAK,SAAS,CAAC,YAAW,+FAO7D,OAJA,UAAU,AAAC,wDAC8C,OAAxB,KAAK,SAAS,CAAC,UAAS,iFACY,IAAG,gBAMxE,OAJA,MAAM,AAAC,gDAC0C,OAApB,KAAK,SAAS,CAAC,MAAK,yEACY,IAAG,gBAIN,OAF1D,UAAU,AAAC,sDAC6C,OAAxB,KAAK,SAAS,CAAC,UAAS,mEACD,IAAG;AAOhE;AAEA;;CAEC,GACD,SAAS,0BAA0B,YAAoB,EAAE,QAAwB,EAAE,WAAmB;IACpG,2BAA2B;IAC3B,IAAI,eAAe;IACnB,IAAI,aAAuB,EAAE;IAE7B,0BAA0B;IAC1B,IAAI,oBAAoB,kJAAA,CAAA,oBAAuB,EAAE,eAAe;SAC3D,IAAI,oBAAoB,kJAAA,CAAA,oBAAuB,EAAE,eAAe;SAChE,IAAI,oBAAoB,kJAAA,CAAA,sBAAyB,EAAE,eAAe;SAClE,IAAI,oBAAoB,kJAAA,CAAA,qBAAwB,EAAE,eAAe;SACjE,IAAI,oBAAoB,kJAAA,CAAA,oBAAuB,EAAE,eAAe;SAChE,IAAI,oBAAoB,kJAAA,CAAA,qBAAwB,EAAE,eAAe;SACjE,IAAI,oBAAoB,kJAAA,CAAA,mBAAsB,EAAE,eAAe;SAC/D,IAAI,oBAAoB,kJAAA,CAAA,uBAA0B,EAAE,eAAe;SACnE,IAAI,oBAAoB,kJAAA,CAAA,uBAA0B,EAAE,eAAe;SACnE,IAAI,oBAAoB,kJAAA,CAAA,iBAAoB,EAAE,eAAe;IAElE,2CAA2C;IAC3C,OAAQ;QACN,KAAK;YACH,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB;QAEF,KAAK;YACH,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB;QAEF,KAAK;YACH,eAAe;YACf;QAEF,KAAK;YACH,eAAe;YACf;QAEF,KAAK;YACH,eAAe;YACf,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB,WAAW,IAAI,CAAC;YAChB;QAEF;YACE,+BAA+B;YAC/B,WAAW,IAAI,CAAC,AAAC,0BAA8C,OAArB,SAAS,KAAK,CAAC,CAAC,EAAC,MAAyB,OAArB,SAAS,KAAK,CAAC,CAAC,EAAC,MAAqB,OAAjB,SAAS,KAAK,CAAC,CAAC,EAAC;YAErG,IAAI,eAAe,UAAU,WAAW,IAAI,CAAC,AAAC,cAAyC,OAA5B,AAAC,SAAiB,SAAS;YACtF,IAAI,eAAe,UAAU,WAAW,IAAI,CAAC,AAAC,cAAyC,OAA5B,AAAC,SAAiB,SAAS;YACtF,IAAI,aAAa,UAAU,WAAW,IAAI,CAAC,AAAC,YAAqC,OAA1B,AAAC,SAAiB,OAAO;YAChF,IAAI,iBAAiB,UAAU,WAAW,IAAI,CAAC,AAAC,gBAA6C,OAA9B,AAAC,SAAiB,WAAW;YAC5F,IAAI,cAAc,UAAU;gBAC1B,MAAM,WAAW,AAAC,SAAiB,QAAQ;gBAC3C,WAAW,IAAI,CAAC,AAAC,6BAA2C,OAAf,SAAS,CAAC,EAAC,MAAmB,OAAf,SAAS,CAAC,EAAC,MAAe,OAAX,SAAS,CAAC,EAAC;YACxF;YACA,IAAI,uBAAuB,UAAU,WAAW,IAAI,CAAC,AAAC,sBAAyD,OAApC,AAAC,SAAiB,iBAAiB;YAC9G,IAAI,eAAe,UAAU,WAAW,IAAI,CAAC,AAAC,cAAyC,OAA5B,AAAC,SAAiB,SAAS;YACtF;IACJ;IAEA,8BAA8B;IAC9B,OAAO,AAAC,8DAGW,OADK,cAAa,6BAEjC,OADe,cAAa,YACD,OAA3B,WAAW,IAAI,CAAC,YAAW;AAGjC;AAEA;;CAEC,GACD,SAAS,uBACP,aAAqB,EACrB,MAAkB,EAClB,SAAyB,EACzB,WAAmB;IAEnB,mBAAmB;IACnB,MAAM,cAAc,OAAO,GAAG,CAAC,CAAA,OAC7B,AAAC,UAAqC,OAA5B,KAAK,IAAI,EAAC,oBAA4B,OAAV,KAAK,IAAI,EAAC,OAChD,IAAI,CAAC;IAEP,MAAM,kBAAkB,UAAU,GAAG,CAAC,CAAA,WACpC,AAAC,UAA4C,OAAnC,SAAS,IAAI,EAAC,uBAAmC,OAAd,SAAS,IAAI,EAAC,OAC3D,IAAI,CAAC;IAEP,yBAAyB;IACzB,MAAM,eAAe,OAAO,GAAG,CAAC,CAAC,MAAM;QACrC,MAAM,WAAW,SAAS,CAAC,IAAI,UAAU,MAAM,CAAC;QAChD,OAAO,AAAC,UAAgC,OAAvB,KAAK,IAAI,EAAC,eAA2B,OAAd,SAAS,IAAI,EAAC;IACxD,GAAG,IAAI,CAAC;IAER,OAAO,AAAC,6GAIR,OADA,aAAY,MAGY,OAFxB,iBAAgB,gCAOhB,OALwB,eAAc,sGAKzB,OAAb,cAAa;AAIf;AAEA;;CAEC,GACD,SAAS,aAAa,IAAY;IAChC,8CAA8C;IAC9C,IAAI,WAAW,KAAK,OAAO,CAAC,kBAAkB;IAE9C,iCAAiC;IACjC,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW;QAChC,WAAW,MAAM;IACnB;IAEA,2BAA2B;IAC3B,MAAM,mBAAmB;QAAC;QAAW;QAAY;QAAS;QAAU;QAAU;QAAO;QAAS;KAAM;IACpG,IAAI,iBAAiB,QAAQ,CAAC,SAAS,WAAW,KAAK;QACrD,WAAW,MAAM;IACnB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Downloads/gltf2code/app/glb-convertor/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { OrbitControls, Environment, useGLTF, Html } from '@react-three/drei';\nimport { Download, Upload, Eye, Code, Loader2, AlertCircle, File, FileText, Folder } from 'lucide-react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nimport JSZip from 'jszip';\nimport saveAs from 'file-saver';\nimport { generateProjectStructure, generateTranspiledComponent } from '@/app/lib/glb-converter';\nimport { MeshData, ProjectStructure } from '@/app/types/glb-convertor';\n\nexport default function GLBConverter() {\n  const [file, setFile] = useState<File | null>(null);\n  const [modelUrl, setModelUrl] = useState('');\n  const [projectStructure, setProjectStructure] = useState<ProjectStructure | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [activeTab, setActiveTab] = useState<'upload' | 'preview' | 'code'>('upload');\n  const [gltfData, setGltfData] = useState<any>(null);\n  \n  // Display options\n  const [displayMode, setDisplayMode] = useState<'original' | 'wireframe' | 'solid' | 'normals' | 'depth' | 'points'>('original');\n  const [autoRotate, setAutoRotate] = useState(true);\n  const [showGrid, setShowGrid] = useState(false);\n  const [showAxes, setShowAxes] = useState(false);\n  const [componentName, setComponentName] = useState('Model');\n  const [selectedLanguage, setSelectedLanguage] = useState<'transpiled-tsx' | 'transpiled-jsx'>('transpiled-tsx');\n  \n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const uploadedFile = event.target.files?.[0];\n    if (uploadedFile && uploadedFile.name.endsWith('.glb')) {\n      setFile(uploadedFile);\n      setError('');\n      setIsLoading(true);\n      setProgress(0);\n      \n      try {\n        // Create object URL for preview\n        const url = URL.createObjectURL(uploadedFile);\n        setModelUrl(url);\n        \n        // Load GLTF with progress tracking for large files\n        await loadGLTFWithProgress(url, uploadedFile);\n        \n        // Generate component name from filename\n        const name = uploadedFile.name.replace('.glb', '').replace(/[^a-zA-Z0-9]/g, '');\n        const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\n        setComponentName(capitalizedName);\n        \n        setActiveTab('preview');\n      } catch (err) {\n        console.error(\"Error loading GLTF \", err);\n        setError('Error processing GLB file. The file may be too large or corrupted.');\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      setError('Please upload a valid .glb file');\n    }\n  };\n  \n  const loadGLTFWithProgress = async (url: string, file: File) => {\n    setIsProcessing(true);\n    setProgress(0);\n    \n    return new Promise<void>((resolve, reject) => {\n      try {\n        // Set up DRACO decoder for compressed models (common in large GLBs)\n        const dracoLoader = new DRACOLoader();\n        dracoLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.6/');\n        \n        const loader = new GLTFLoader();\n        loader.setDRACOLoader(dracoLoader);\n        \n        // Track progress for large files\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        \n        xhr.onload = function() {\n          if (xhr.status === 200) {\n            try {\n              // Process the GLB data\n              loader.parse(\n                xhr.response,\n                '',\n                (gltf) => {\n                  // Store GLTF data for transpilation\n                  setGltfData(gltf);\n                  \n                  // Generate project structure\n                  const structure = generateProjectStructure(gltf, componentName, displayMode);\n                  setProjectStructure(structure);\n                  \n                  setIsProcessing(false);\n                  resolve();\n                },\n                (error) => {\n                  console.error(\"Error parsing GLTF\", error);\n                  setIsProcessing(false);\n                  reject(error);\n                }\n              );\n            } catch (parseError) {\n              console.error(\"Error parsing GLTF data\", parseError);\n              setIsProcessing(false);\n              reject(parseError);\n            }\n          } else {\n            reject(new Error(`Failed to load file: ${xhr.statusText}`));\n          }\n        };\n        \n        xhr.onprogress = function(event) {\n          if (event.lengthComputable) {\n            const percentComplete = (event.loaded / event.total) * 100;\n            setProgress(percentComplete);\n          }\n        };\n        \n        xhr.onerror = function() {\n          reject(new Error('Network error occurred while loading the file'));\n        };\n        \n        xhr.send();\n      } catch (err) {\n        setIsProcessing(false);\n        reject(err);\n      }\n    });\n  };\n  \n  const downloadZip = () => {\n    if (!projectStructure) return;\n    \n    setIsProcessing(true);\n    try {\n      const zip = new JSZip();\n      \n      // Create folder structure\n      const componentFolder = zip.folder(`components/${componentName}`);\n      const meshesFolder = componentFolder?.folder('meshes');\n      const materialsFolder = componentFolder?.folder('materials');\n      \n      // Add index file\n      componentFolder?.file('index.tsx', projectStructure.indexContent);\n      \n      // Add mesh files\n      projectStructure.meshes.forEach(mesh => {\n        meshesFolder?.file(`${mesh.name}.tsx`, mesh.content);\n      });\n      \n      // Add material files\n      projectStructure.materials.forEach(material => {\n        materialsFolder?.file(`${material.name}.tsx`, material.content);\n      });\n      \n      // Generate and download zip\n      zip.generateAsync({ type: 'blob' }).then(content => {\n        saveAs(content, `${componentName}.zip`);\n      });\n    } catch (err) {\n      console.error(\"Error generating ZIP\", err);\n      setError('Failed to generate ZIP file. The model might be too large.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  const downloadCurrentView = () => {\n    if (!gltfData) return;\n    \n    setIsProcessing(true);\n    try {\n      // Generate project structure with current display mode\n      const structure = generateProjectStructure(gltfData, componentName, displayMode);\n      const zip = new JSZip();\n      \n      // Create folder structure\n      const componentFolder = zip.folder(`components/${componentName}`);\n      const meshesFolder = componentFolder?.folder('meshes');\n      const materialsFolder = componentFolder?.folder('materials');\n      \n      // Add index file\n      componentFolder?.file('index.tsx', structure.indexContent);\n      \n      // Add mesh files\n      structure.meshes.forEach(mesh => {\n        meshesFolder?.file(`${mesh.name}.tsx`, mesh.content);\n      });\n      \n      // Add material files\n      structure.materials.forEach(material => {\n        materialsFolder?.file(`${material.name}.tsx`, material.content);\n      });\n      \n      // Generate and download zip\n      zip.generateAsync({ type: 'blob' }).then(content => {\n        saveAs(content, `${componentName}-${displayMode}.zip`);\n      });\n    } catch (err) {\n      console.error(\"Error generating ZIP for current view\", err);\n      setError(`Failed to generate ZIP for ${displayMode} view. The model might be too large.`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  \n  const downloadModel = () => {\n    if (!file) return;\n    const url = URL.createObjectURL(file);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = file.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-white mb-4\">\n            GLB to Mesh Converter\n          </h1>\n          <p className=\"text-slate-300 max-w-2xl mx-auto\">\n            Convert your GLB 3D models into self-contained mesh components like gltfjsx does.\n            Handles large files efficiently with progress tracking and memory optimization.\n          </p>\n        </div>\n        \n        {/* Navigation Tabs */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"bg-slate-800 rounded-lg p-1 flex\">\n            <button\n              onClick={() => setActiveTab('upload')}\n              className={`px-6 py-2 rounded-md font-medium transition-all ${\n                activeTab === 'upload'\n                  ? 'bg-purple-600 text-white'\n                  : 'text-slate-400 hover:text-white'\n              }`}\n            >\n              <Upload className=\"w-4 h-4 inline mr-2\" />\n              Upload\n            </button>\n            <button\n              onClick={() => setActiveTab('preview')}\n              disabled={!file}\n              className={`px-6 py-2 rounded-md font-medium transition-all ${\n                activeTab === 'preview' && file\n                  ? 'bg-purple-600 text-white'\n                  : 'text-slate-400 hover:text-white disabled:opacity-50 disabled:cursor-not-allowed'\n              }`}\n            >\n              <Eye className=\"w-4 h-4 inline mr-2\" />\n              Preview\n            </button>\n            <button\n              onClick={() => setActiveTab('code')}\n              disabled={!projectStructure}\n              className={`px-6 py-2 rounded-md font-medium transition-all ${\n                activeTab === 'code' && projectStructure\n                  ? 'bg-purple-600 text-white'\n                  : 'text-slate-400 hover:text-white disabled:opacity-50 disabled:cursor-not-allowed'\n              }`}\n            >\n              <Code className=\"w-4 h-4 inline mr-2\" />\n              Code\n            </button>\n          </div>\n        </div>\n        \n        {/* Error Display */}\n        {error && (\n          <div className=\"bg-red-900/50 border border-red-500 rounded-lg p-4 mb-6 max-w-2xl mx-auto\">\n            <div className=\"flex items-center\">\n              <AlertCircle className=\"w-5 h-5 text-red-400 mr-2\" />\n              <span className=\"text-red-200\">{error}</span>\n            </div>\n          </div>\n        )}\n        \n        {/* Upload Tab */}\n        {activeTab === 'upload' && (\n          <div className=\"max-w-2xl mx-auto\">\n            <div className=\"bg-slate-800 rounded-xl p-8 border border-slate-700\">\n              <div className=\"text-center\">\n                <div className=\"border-2 border-dashed border-slate-600 rounded-lg p-12 hover:border-purple-500 transition-colors\">\n                  <Upload className=\"w-12 h-12 text-slate-400 mx-auto mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">\n                    Upload your GLB model\n                  </h3>\n                  <p className=\"text-slate-400 mb-6\">\n                    Drop your .glb file here or click to browse\n                  </p>\n                  <input\n                    type=\"file\"\n                    accept=\".glb\"\n                    onChange={handleFileUpload}\n                    className=\"hidden\"\n                    id=\"file-upload\"\n                    disabled={isLoading}\n                  />\n                  <label\n                    htmlFor=\"file-upload\"\n                    className={`bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-lg cursor-pointer transition-colors inline-block ${\n                      isLoading ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                  >\n                    {isLoading ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 inline mr-2 animate-spin\" />\n                        Processing...\n                      </>\n                    ) : (\n                      'Choose File'\n                    )}\n                  </label>\n                </div>\n              </div>\n              \n              {/* Progress Bar for Large Files */}\n              {(isLoading || isProcessing) && (\n                <div className=\"mt-6\">\n                  <div className=\"flex justify-between mb-1\">\n                    <span className=\"text-slate-300 text-sm\">\n                      {isProcessing ? 'Processing model...' : 'Loading file...'}\n                    </span>\n                    <span className=\"text-slate-300 text-sm\">{Math.round(progress)}%</span>\n                  </div>\n                  <div className=\"w-full bg-slate-700 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-purple-600 h-2.5 rounded-full transition-all duration-300\" \n                      style={{ width: `${progress}%` }}\n                    ></div>\n                  </div>\n                  <p className=\"text-slate-400 text-xs mt-2\">\n                    {progress < 100 \n                      ? \"Loading large model. This may take a few moments...\" \n                      : \"Optimizing model data for transpilation...\"}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Preview Tab */}\n        {activeTab === 'preview' && modelUrl && (\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"bg-slate-800 rounded-xl p-6 border border-slate-700\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h3 className=\"text-xl font-semibold text-white\">3D Model Preview</h3>\n                <div className=\"flex items-center gap-4\">\n                  {/* Display Mode Controls */}\n                  <div className=\"flex items-center gap-2\">\n                    <label className=\"text-slate-300 text-sm\">Display Mode:</label>\n                    <select\n                      value={displayMode}\n                      onChange={(e) => setDisplayMode(e.target.value as any)}\n                      className=\"bg-slate-700 text-white px-3 py-1 rounded border border-slate-600 focus:border-purple-500 outline-none text-sm\"\n                    >\n                      <option value=\"original\">Original</option>\n                      <option value=\"wireframe\">Wireframe</option>\n                      <option value=\"solid\">Solid Color</option>\n                      <option value=\"normals\">Normals</option>\n                      <option value=\"depth\">Depth</option>\n                      <option value=\"points\">Point Cloud</option>\n                    </select>\n                  </div>\n                  \n                  {/* Toggle Controls */}\n                  <div className=\"flex items-center gap-4\">\n                    <label className=\"flex items-center gap-2 text-slate-300 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        checked={autoRotate}\n                        onChange={(e) => setAutoRotate(e.target.checked)}\n                        className=\"rounded border-slate-600 bg-slate-700 text-purple-600 focus:ring-purple-500\"\n                      />\n                      Auto Rotate\n                    </label>\n                    <label className=\"flex items-center gap-2 text-slate-300 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        checked={showGrid}\n                        onChange={(e) => setShowGrid(e.target.checked)}\n                        className=\"rounded border-slate-600 bg-slate-700 text-purple-600 focus:ring-purple-500\"\n                      />\n                      Grid\n                    </label>\n                    <label className=\"flex items-center gap-2 text-slate-300 text-sm\">\n                      <input\n                        type=\"checkbox\"\n                        checked={showAxes}\n                        onChange={(e) => setShowAxes(e.target.checked)}\n                        className=\"rounded border-slate-600 bg-slate-700 text-purple-600 focus:ring-purple-500\"\n                      />\n                      Axes\n                    </label>\n                  </div>\n                  \n                  <button\n                    onClick={downloadCurrentView}\n                    disabled={isProcessing}\n                    className={`bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2 ${\n                      isProcessing ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                  >\n                    {isProcessing ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 animate-spin\" />\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <File className=\"w-4 h-4\" />\n                        Download {displayMode} Version\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n              \n              {/* Display Mode Description */}\n              <div className=\"mb-4\">\n                <div className=\"bg-slate-900 rounded-lg p-3\">\n                  <p className=\"text-slate-400 text-sm\">\n                    {displayMode === 'original' && 'Showing the original model with its materials and textures.'}\n                    {displayMode === 'wireframe' && 'Displaying the model as a wireframe structure showing the mesh geometry.'}\n                    {displayMode === 'solid' && 'Rendering the model with a uniform solid color material.'}\n                    {displayMode === 'normals' && 'Visualizing surface normals with color-coded directions (RGB = XYZ).'}\n                    {displayMode === 'depth' && 'Showing depth information - closer surfaces appear lighter.'}\n                    {displayMode === 'points' && 'Displaying the model as a point cloud of vertices.'}\n                  </p>\n                </div>\n              </div>\n              \n              <div className=\"bg-slate-900 rounded-lg overflow-hidden\" style={{ height: '500px' }}>\n                <Canvas \n                  camera={{ position: [0, 0, 5], fov: 50 }}\n                  gl={{ \n                    powerPreference: \"high-performance\",\n                    antialias: true,\n                    alpha: true\n                  }}\n                >\n                  <ambientLight intensity={0.5} />\n                  <pointLight position={[10, 10, 10]} />\n                  <pointLight position={[-10, -10, -10]} intensity={0.3} />\n                  \n                  {/* Memory-optimized loading for large models */}\n                  {modelUrl && (\n                    <React.Suspense fallback={\n                      <Html center>\n                        <div className=\"text-white bg-black/50 p-2 rounded\">\n                          <Loader2 className=\"w-4 h-4 inline mr-2 animate-spin\" />\n                          Loading model...\n                        </div>\n                      </Html>\n                    }>\n                      <ModelPreview \n                        url={modelUrl} \n                        displayMode={displayMode} \n                        autoRotate={autoRotate} \n                      />\n                    </React.Suspense>\n                  )}\n                  \n                  {showGrid && (\n                    <gridHelper args={[10, 10, '#444444', '#666666']} />\n                  )}\n                  {showAxes && (\n                    <axesHelper args={[2]} />\n                  )}\n                  <OrbitControls \n                    enableZoom \n                    enablePan \n                    enableRotate \n                    minDistance={0.1}\n                    maxDistance={100}\n                  />\n                  <Environment preset=\"studio\" />\n                </Canvas>\n              </div>\n              \n              <p className=\"text-slate-400 text-sm mt-4 text-center\">\n                Use mouse to rotate, zoom, and pan around the model. Try different display modes to analyze the model structure.\n              </p>\n            </div>\n          </div>\n        )}\n        \n        {/* Code Tab */}\n        {activeTab === 'code' && projectStructure && (\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"bg-slate-800 rounded-xl border border-slate-700\">\n              <div className=\"flex justify-between items-center p-6 border-b border-slate-700\">\n                <div className=\"flex items-center gap-4\">\n                  <h3 className=\"text-xl font-semibold text-white\">\n                    Project Structure\n                  </h3>\n                  \n                  {/* Language Selection */}\n                  <div className=\"flex items-center gap-2\">\n                    <label className=\"text-slate-300 text-sm\">Format:</label>\n                    <select\n                      value={selectedLanguage}\n                      onChange={(e) => setSelectedLanguage(e.target.value as any)}\n                      className=\"bg-slate-700 text-white px-3 py-1 rounded border border-slate-600 focus:border-purple-500 outline-none text-sm\"\n                    >\n                      <option value=\"transpiled-tsx\">TypeScript (TSX)</option>\n                      <option value=\"transpiled-jsx\">JavaScript (JSX)</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div className=\"flex gap-4\">\n                  <button\n                    onClick={downloadZip}\n                    disabled={isProcessing}\n                    className={`bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2 ${\n                      isProcessing ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                  >\n                    {isProcessing ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 animate-spin\" />\n                        Processing...\n                      </>\n                    ) : (\n                      <>\n                        <File className=\"w-4 h-4\" />\n                        Download Full Project\n                      </>\n                    )}\n                  </button>\n                  <button\n                    onClick={downloadModel}\n                    className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors flex items-center gap-2\"\n                  >\n                    <Download className=\"w-4 h-4\" />\n                    Download GLB\n                  </button>\n                </div>\n              </div>\n              \n              {/* Project Structure Overview */}\n              <div className=\"p-6 border-b border-slate-700\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"flex-1\">\n                    <h4 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n                      <Folder className=\"w-5 h-5 mr-2 text-purple-400\" />\n                      Project Structure\n                    </h4>\n                    <div className=\"bg-slate-900 rounded-lg p-4\">\n                      <div className=\"text-slate-400 text-sm\">\n                        <div className=\"flex items-center\">\n                          <Folder className=\"w-4 h-4 mr-2 text-yellow-400\" />\n                          <span className=\"font-medium\">components</span>\n                        </div>\n                        <div className=\"pl-6\">\n                          <div className=\"flex items-center\">\n                            <Folder className=\"w-4 h-4 mr-2 text-blue-400\" />\n                            <span className=\"font-medium\">{componentName}</span>\n                          </div>\n                          <div className=\"pl-6\">\n                            <div className=\"flex items-center\">\n                              <FileText className=\"w-4 h-4 mr-2 text-green-400\" />\n                              <span>index.tsx</span>\n                            </div>\n                            <div className=\"flex items-center\">\n                              <Folder className=\"w-4 h-4 mr-2 text-cyan-400\" />\n                              <span className=\"font-medium\">meshes</span>\n                            </div>\n                            <div className=\"pl-6\">\n                              {projectStructure.meshes.map((mesh, i) => (\n                                <div key={i} className=\"flex items-center\">\n                                  <File className=\"w-4 h-4 mr-2 text-cyan-400\" />\n                                  <span>{mesh.name}.tsx</span>\n                                </div>\n                              ))}\n                            </div>\n                            <div className=\"flex items-center mt-2\">\n                              <Folder className=\"w-4 h-4 mr-2 text-orange-400\" />\n                              <span className=\"font-medium\">materials</span>\n                            </div>\n                            <div className=\"pl-6\">\n                              {projectStructure.materials.map((material, i) => (\n                                <div key={i} className=\"flex items-center\">\n                                  <File className=\"w-4 h-4 mr-2 text-orange-400\" />\n                                  <span>{material.name}.tsx</span>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <h4 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n                      <FileText className=\"w-5 h-5 mr-2 text-purple-400\" />\n                      Model Statistics\n                    </h4>\n                    <div className=\"bg-slate-900 rounded-lg p-4\">\n                      <div className=\"text-slate-400 text-sm space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span>Meshes:</span>\n                          <span className=\"font-medium\">{projectStructure.meshes.length}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Materials:</span>\n                          <span className=\"font-medium\">{projectStructure.materials.length}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Total Vertices:</span>\n                          <span className=\"font-medium\">{projectStructure.totalVertices.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Total Triangles:</span>\n                          <span className=\"font-medium\">{projectStructure.totalTriangles.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>File Size:</span>\n                          <span className=\"font-medium\">{file ? (file.size / 1024 / 1024).toFixed(2) + ' MB' : 'N/A'}</span>\n                        </div>\n                        <div className=\"pt-2 border-t border-slate-700 mt-2\">\n                          <p className=\"text-xs text-slate-500\">\n                            {`Note: For extremely large models (>100MB), some meshes might be simplified \n                            during transpilation to prevent browser memory issues.`}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Code Preview */}\n              <div className=\"p-6\">\n                <div className=\"mb-6\">\n                  <h4 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n                    <FileText className=\"w-5 h-5 mr-2 text-purple-400\" />\n                    index.tsx - Main Component\n                  </h4>\n                  <pre className=\"bg-slate-900 rounded-lg p-4 overflow-x-auto text-sm max-h-60 overflow-y-auto\">\n                    <code className=\"text-slate-300 whitespace-pre-wrap\">{projectStructure.indexContent}</code>\n                  </pre>\n                </div>\n                \n                <div className=\"mb-6\">\n                  <h4 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n                    <Folder className=\"w-5 h-5 mr-2 text-cyan-400\" />\n                    Mesh Components\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {projectStructure.meshes.slice(0, 3).map((mesh, i) => (\n                      <div key={i} className=\"bg-slate-900 rounded-lg overflow-hidden\">\n                        <div className=\"px-4 py-2 bg-slate-800 border-b border-slate-700\">\n                          <span className=\"text-cyan-400 font-mono\">{mesh.name}.tsx</span>\n                        </div>\n                        <pre className=\"p-4 overflow-x-auto text-sm max-h-40 overflow-y-auto\">\n                          <code className=\"text-slate-300 whitespace-pre-wrap\">{mesh.content}</code>\n                        </pre>\n                      </div>\n                    ))}\n                    {projectStructure.meshes.length > 3 && (\n                      <div className=\"col-span-full text-center text-slate-400 text-sm py-4\">\n                        ... and {projectStructure.meshes.length - 3} more mesh components\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"text-lg font-semibold text-white mb-3 flex items-center\">\n                    <Folder className=\"w-5 h-5 mr-2 text-orange-400\" />\n                    Material Components\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {projectStructure.materials.slice(0, 3).map((material, i) => (\n                      <div key={i} className=\"bg-slate-900 rounded-lg overflow-hidden\">\n                        <div className=\"px-4 py-2 bg-slate-800 border-b border-slate-700\">\n                          <span className=\"text-orange-400 font-mono\">{material.name}.tsx</span>\n                        </div>\n                        <pre className=\"p-4 overflow-x-auto text-sm max-h-40 overflow-y-auto\">\n                          <code className=\"text-slate-300 whitespace-pre-wrap\">{material.content}</code>\n                        </pre>\n                      </div>\n                    ))}\n                    {projectStructure.materials.length > 3 && (\n                      <div className=\"col-span-full text-center text-slate-400 text-sm py-4\">\n                        ... and {projectStructure.materials.length - 3} more material components\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"p-6 border-t border-slate-700\">\n                <h4 className=\"text-lg font-semibold text-white mb-3\">\n                  How to Use\n                </h4>\n                <div className=\"space-y-3\">\n                  <div>\n                    <p className=\"text-slate-400 text-sm mb-2\">1. Download the complete project:</p>\n                    <pre className=\"bg-slate-900 rounded p-2 text-sm\">\n                      <code className=\"text-blue-400\">{`<button onClick={downloadZip}>Download Project</button>`}</code>\n                    </pre>\n                  </div>\n                  <div>\n                    <p className=\"text-slate-400 text-sm mb-2\">2. Extract the zip file into your components directory</p>\n                  </div>\n                  <div>\n                    <p className=\"text-slate-400 text-sm mb-2\">3. Import and use the component:</p>\n                    <pre className=\"bg-slate-900 rounded p-2 text-sm\">\n                      <code className=\"text-blue-400\">{`import ${componentName} from '@/components/${componentName}'\n// ...\n<Canvas>\n  <${componentName} />\n</Canvas>`}</code>\n                    </pre>\n                  </div>\n                  <div>\n                    <p className=\"text-slate-400 text-sm mb-2\">4. Customize individual parts:</p>\n                    <pre className=\"bg-slate-900 rounded p-2 text-sm\">\n                      <code className=\"text-blue-400\">{`// Access specific parts\nimport { MeshName } from '@/components/${componentName}/meshes'\nimport { MaterialName } from '@/components/${componentName}/materials'\n\n// Example: Change material of a specific mesh\nfunction CustomModel() {\n  return (\n    <${componentName}>\n      <mesh geometry={nodes.MeshName.geometry} material={new MaterialName()} />\n    </${componentName}>\n  )\n}`}</code>\n                    </pre>\n                  </div>\n                  <div className=\"pt-2 border-t border-slate-700 mt-2\">\n                    <p className=\"text-xs text-slate-500\">\n                      For extremely large models, the converter automatically applies optimizations:\n                      <br />- Geometry data is broken into chunks for memory efficiency\n                      <br />- Complex geometries may be simplified to prevent browser crashes\n                      <br />- Large textures are omitted (only geometry and basic materials are transpiled)\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Component to display the GLB model in the preview with memory optimization\nfunction ModelPreview({ url, displayMode, autoRotate }: { \n  url: string; \n  displayMode: string; \n  autoRotate: boolean \n}) {\n  const [gltf, setGltf] = useState<any>(null);\n  const meshRef = useRef<THREE.Group>(null);\n  \n  // Load GLTF with memory optimization for large files\n  useEffect(() => {\n    let isMounted = true;\n    const loader = new GLTFLoader();\n    \n    // Set up DRACO for compressed models\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.6/');\n    loader.setDRACOLoader(dracoLoader);\n    \n    // For large files, use a more memory-efficient approach\n    fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(data => {\n        if (!isMounted) return;\n        \n        loader.parse(\n          data,\n          '',\n          (gltf) => {\n            // For extremely large models, simplify geometries to prevent memory issues\n            if (gltf.scene) {\n              gltf.scene.traverse((object: THREE.Object3D) => {\n                if (object.isMesh) {\n                  const mesh = object as THREE.Mesh;\n                  const geometry = mesh.geometry;\n                  \n                  // Check if the geometry is extremely large\n                  const vertexCount = geometry.attributes.position.count;\n                  if (vertexCount > 1000000) {\n                    // For extremely large meshes, consider simplifying or warning\n                    console.warn(`Mesh ${mesh.name} has ${vertexCount} vertices - this may cause performance issues`);\n                  }\n                }\n              });\n            }\n            \n            if (isMounted) {\n              setGltf(gltf);\n            }\n          },\n          (error) => {\n            console.error(\"Error parsing GLTF\", error);\n          }\n        );\n      })\n      .catch(error => {\n        console.error(\"Error loading GLB file\", error);\n      });\n    \n    return () => {\n      isMounted = false;\n      // Clean up GLTF resources\n      if (gltf) {\n        gltf.scene.traverse((object: THREE.Object3D) => {\n          if (object.isMesh) {\n            const mesh = object as THREE.Mesh;\n            mesh.geometry.dispose();\n            if (Array.isArray(mesh.material)) {\n              mesh.material.forEach(material => material.dispose());\n            } else {\n              mesh.material.dispose();\n            }\n          }\n        });\n      }\n    };\n  }, [url]);\n  \n  useFrame((state) => {\n    if (meshRef.current && autoRotate) {\n      meshRef.current.rotation.y = state.clock.getElapsedTime() * 0.5;\n    }\n  });\n  \n  // Apply material overrides based on display mode\n  useEffect(() => {\n    if (gltf && gltf.scene) {\n      gltf.scene.traverse((child: THREE.Object3D) => {\n        if (child.isMesh) {\n          const mesh = child as THREE.Mesh;\n          const originalMaterial = mesh.material;\n          \n          // Dispose of old materials to prevent memory leaks\n          if (Array.isArray(originalMaterial)) {\n            originalMaterial.forEach(material => material.dispose());\n          } else if (originalMaterial && originalMaterial.dispose) {\n            originalMaterial.dispose();\n          }\n          \n          // Create new materials based on display mode\n          switch (displayMode) {\n            case 'wireframe':\n              if (Array.isArray(originalMaterial)) {\n                mesh.material = originalMaterial.map(mat => {\n                  const newMat = mat.clone();\n                  newMat.wireframe = true;\n                  newMat.transparent = true;\n                  newMat.opacity = 0.8;\n                  return newMat;\n                });\n              } else {\n                const newMat = originalMaterial.clone();\n                newMat.wireframe = true;\n                newMat.transparent = true;\n                newMat.opacity = 0.8;\n                mesh.material = newMat;\n              }\n              break;\n            case 'points':\n              mesh.material = new THREE.PointsMaterial({\n                color: 0x00ff00,\n                size: 0.01,\n                sizeAttenuation: true\n              });\n              break;\n            case 'normals':\n              mesh.material = new THREE.MeshNormalMaterial();\n              break;\n            case 'depth':\n              mesh.material = new THREE.MeshDepthMaterial();\n              break;\n            case 'solid':\n              mesh.material = new THREE.MeshStandardMaterial({\n                color: 0x888888,\n                metalness: 0.1,\n                roughness: 0.8\n              });\n              break;\n            default:\n              // Keep original materials for 'original' mode\n              mesh.material = originalMaterial;\n              break;\n          }\n        }\n      });\n    }\n  }, [gltf, displayMode]);\n  \n  if (!gltf) {\n    return (\n      <Html center>\n        <div className=\"text-white bg-black/50 p-2 rounded\">\n          <Loader2 className=\"w-4 h-4 inline mr-2 animate-spin\" />\n          Loading model...\n        </div>\n      </Html>\n    );\n  }\n  \n  return (\n    <primitive \n      ref={meshRef} \n      object={gltf.scene} \n      scale={[1, 1, 1]}\n      position={[0, 0, 0]}\n    />\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2296, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Downloads/gltf2code/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Environment } from \"@react-three/drei\";// Your GLB model as component\nimport GLBConverter from \"./glb-convertor/page\";\n\nexport default function Home() {\n  return (\n    <div className=\"h-[100vh] bg-gradient-to-br from-black via-gray-900 to-gray-800\">\n      <GLBConverter/>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAKe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,mIAAA,CAAA,UAAY;;;;;;;;;;AAGnB;KANwB","debugId":null}}]
}